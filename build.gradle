plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'umc'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	// implementation 'org.springframework.boot:spring-boot-starter-json'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.hibernate.orm:hibernate-core:6.0.2.Final' //Hibernate 6.0.2 이상
	implementation 'mysql:mysql-connector-java:8.0.33' // MySQL 드라이버 추가

	//queryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api:3.1.0'

	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.2'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'




	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'

	implementation 'org.hibernate:hibernate-core:6.2.0.Final'


	implementation 'org.springdoc:springdoc-openapi-ui:2.1.0'
	implementation 'org.springdoc:springdoc-openapi-data-rest:2.1.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// 검증
	implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'
	implementation 'org.glassfish:jakarta.el:4.0.2'  // EL (Expression Language) API 필요 시 추가

	//스웨거
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

	//자카르타 서블릿 API
	implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'

}

sourceSets {
	main {
		java {
			srcDirs= ['src/main/java', 'src/main/resources']
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
tasks.withType(JavaCompile) {
	options.compilerArgs += "-parameters"
}

// Querydsl 설정부
def generated='src/main/generated'

querydsl {
	jpa=true
	querydslSourcesDir= generated
}
sourceSets {
	main.java.srcDir generated
}

compileQuerydsl {
	options.annotationProcessorPath= configurations.querydsl
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}
